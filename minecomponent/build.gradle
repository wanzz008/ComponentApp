if(mineRunAlone.toBoolean()){
    apply plugin: 'com.android.application'
}else{
    apply plugin: 'com.android.library'
}

android {

    compileSdkVersion rootProject.ext.compileSdkVersion  // compileSdkVersion compile_sdk_version.toInteger()
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        if ( mineRunAlone.toBoolean() ){
            applicationId "com.wzz.minecomponent"
        }
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // 使用阿里路由需在组件Module下配置两步 1：
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }

    }

    sourceSets {
        main {
            // 独立运行与集成调试时使用不同的 AndroidManifest.xml 文件
            if (mineRunAlone.toBoolean()) {
                manifest.srcFile 'src/main/manifest/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    testCompile 'junit:junit:4.12'
    compile project(':commonlib') // 引用公共库

    // 使用阿里路由需在组件Module下配置两步 2：
    annotationProcessor 'com.alibaba:arouter-compiler:1.0.3'
}
